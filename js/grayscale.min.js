/*!
 * Start Bootstrap - Grayscale v3.3.7+1 (http://startbootstrap.com/template-overviews/grayscale)
 * Copyright 2013-2016 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap/blob/gh-pages/LICENSE)
 */




function collapseNavbar() {
    if ($(".navbar").offset().top > 50) { $(".navbar-fixed-top").addClass("top-nav-collapse"); } else { $(".navbar-fixed-top").removeClass("top-nav-collapse"); }
}
$(window).scroll(collapseNavbar);
$(document).ready(collapseNavbar);
$(function() {
    $('a.page-scroll').bind('click', function(event) {
        var $anchor = $(this);
        $('html, body').stop().animate({ scrollTop: $($anchor.attr('href')).offset().top }, 1500, 'easeInOutExpo');
        event.preventDefault();
    });
});
$('.navbar-collapse ul li a').click(function() { $(".navbar-collapse").collapse('hide'); });
// var map = null;
// google.maps.event.addDomListener(window, 'load', init);
// google.maps.event.addDomListener(window, 'resize', function() { map.setCenter(new google.maps.LatLng(30.2672654, -97.768282)); });

// function init() {
//     var mapOptions = { zoom: 15, center: new google.maps.LatLng(30.2672654, -97.768282), disableDefaultUI: true, scrollwheel: false, draggable: false, styles: [{ "featureType": "water", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }, { "featureType": "landscape", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "road.highway", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }, { "featureType": "road.highway", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 29 }, { "weight": 0.2 }] }, { "featureType": "road.arterial", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 18 }] }, { "featureType": "road.local", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 16 }] }, { "featureType": "poi", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 21 }] }, { "elementType": "labels.text.stroke", "stylers": [{ "visibility": "on" }, { "color": "#000000" }, { "lightness": 16 }] }, { "elementType": "labels.text.fill", "stylers": [{ "saturation": 36 }, { "color": "#000000" }, { "lightness": 40 }] }, { "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "transit", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 19 }] }, { "featureType": "administrative", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "administrative", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 17 }, { "weight": 1.2 }] }] };
//     var mapElement = document.getElementById('map');
//     map = new google.maps.Map(mapElement, mapOptions);
//     var image = 'img/map-marker.png';
//     var myLatLng = new google.maps.LatLng(30.2672654, -97.768282);
//     var beachMarker = new google.maps.Marker({ position: myLatLng, map: map, icon: image });
// }

var map;
var infowindow;
var request;
var service;
var markers = [];


function initialize(lat, lng) {
    var center = new google.maps.LatLng(lat, lng);
    // console.log(center);
    // console.log(lat);
    // console.log(lng);
    map = new google.maps.Map(document.getElementById('map'), {
        center: center,
        zoom: 12
    });

    var request = {
        location: center,
        radius: 8047,
        type: ['lodging']

    };

    infowindow = new google.maps.InfoWindow();
    var service = new google.maps.places.PlacesService(map);
    service.nearbySearch(request, callback);
}

function callback(returns, status) {
    if (status == google.maps.places.PlacesServiceStatus.OK) {
        for (var i = 0; i < returns.length; i++) {
            createMarker(returns[i]);
        }
    }
}

function createMarker(place) {


    console.log(place);
    var placeLoc = place.geometry.location;
    // infowindow;
    // var infowindow = new google.maps.InfoWindow();
    var service = new google.maps.places.PlacesService(map);
   
     // google.maps.event.addListener(marker, 'click', function() {
     //    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +
     //            '<br>' +
     //            place.formatted_address + '<br>' + '</div>');
              
     //          infowindow.open(map, this);
            
     //        });

       service.getDetails({
          placeId: place.place_id
        }, function(place, status) {
        
            var marker = new google.maps.Marker({
              map: map,
              position: place.geometry.location,
              title: "Click here for more lit details"
            });

            google.maps.event.addListener(marker, 'click', function() {
              infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +
             place.formatted_address + '</div>');
              infowindow.open(map, this);
            });
          
        });

}

google.maps.event.addDomListener(window, 'load', initialize(30.2672654, -97.768282));



// ticketmaster API + Gmaps API boilerplate
$("#userInputBtn").on("click", function() {
    event.preventDefault();

    var zip = $("#zipInput").val().trim();
    var city = $("#exampleCity").val().trim();
    var state = $("#exampleState").val().trim();
    var address = city + state + zip;
    //formatting date for TM API
    var startDate = moment($("#exampleStartDate").val().trim(), "MM-DD-YYYY").format("YYYY-MM-DD");
    var endDate = moment($("#exampleEndDate").val().trim(), "MM-DD-YYYY").format("YYYY-MM-DD");

    // console.log(startDate);
    // console.log(zip);
    // console.log(address);



    // var endDate = $("#contact").val().trim();
    var queryURL = "https://app.ticketmaster.com/discovery/v2/events.json?countryCode=US&city=" + city + "&startDateTime=" + startDate + "T14:00:00Z" + "&endDateTime=" + endDate + "T14:00:00Z" + "&apikey=Y7d6IhdzuKbg2Vw9Vij5Sb1q8q7kP63r";



    $.ajax({
        type: "GET",
        url: queryURL,
        async: true,
        dataType: "json",
        success: function(response) {
            // console.log(response);
            // Parse the response.
            var results = response._embedded;

            // console.log(results);
            // console.log(queryURL);


            for (var i = 0; i < 10; i++) {
                var eventDiv = $("<div>");
                var eventDescriptions = $("<p>").text("Description: " + results.events[i].classifications[0].genre.name);
                var eventName = $("<p>").text("Name: " + results.events[i].name);
                var eventStartTime = $("<p>").text("Start Time: " + moment(results.events[i].dates.start.localTime, "hh:mma").format("hh:mma"));
                var eventImage = $("<img>");
                eventImage.addClass("resultsImage");
                eventDescriptions.addClass("resultsDescription");
                eventName.addClass("resultsName");
                eventStartTime.addClass("resultsStartTime");
                eventImage.attr("src", results.events[i].images[i].url);
                eventDiv.append(eventName);
                eventDiv.append(eventDescriptions);
                eventDiv.append(eventStartTime);
                eventDiv.append(eventImage);
                eventDiv.addClass("eventEntry");
                $("#eventAppend").append(eventDiv);

            }

        },
        error: function(xhr, status, err) {
            // This time, we do not end up here!

        }

    });
  //clear events results after user clicks submit again.
  $('#eventAppend').empty();

    // Gmaps JS API Geocoding for new address searches
    var geocoder = new google.maps.Geocoder();
    geocodeAddress(geocoder, map);
    var map;
    var infowindow;
    var request;
    var service;
    var markers = [];



    function geocodeAddress(geocoder, resultsMap) {
        geocoder.geocode({ 'address': address }, function(results, status) {
            if (status === 'OK') {
                console.log(results);
                initialize(results[0].geometry.viewport.f.b, results[0].geometry.viewport.b.b);
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }




});



//Firebase Database -- needed to incorporate google hotel api & save recent city searches 
var config = {
    apiKey: "AIzaSyClTOHIFhCAp2VtAga6fgZgs_Tdn0X7ue4",
    authDomain: "staynplay-db2.firebaseapp.com",
    databaseURL: "https://staynplay-db2.firebaseio.com",
    projectId: "staynplay-db2",
    storageBucket: "staynplay-db2.appspot.com",
    messagingSenderId: "61188880759"
};
firebase.initializeApp(config);