

// AK firebase connection
var config = {
    apiKey: "AIzaSyAGIYO-KXVoxnVZ8Ipe5POZ9N-rSBThyGg",
    authDomain: "staynplay-test.firebaseapp.com",
    databaseURL: "https://staynplay-test.firebaseio.com",
    projectId: "staynplay-test",
    storageBucket: "staynplay-test.appspot.com",
    messagingSenderId: "190344443962"
};
firebase.initializeApp(config);
var database = firebase.database();

var jssor_1_SlideshowTransitions = [
              
              ];

            var jssor_1_options = {
              
            };

            var jssor_1_slider = {};
            var originalSliderContainer = null;


function ScaleSlider() {
    var refSize = jssor_1_slider.$Elmt.parentNode.clientWidth;
    if (refSize) {
        refSize = Math.min(refSize, 960);
        refSize = Math.max(refSize, 300);
        jssor_1_slider.$ScaleWidth(refSize);
    }
    else {
        window.setTimeout(ScaleSlider, 30);
    }
}



$(window).on("load", function() {
    $("#oldSearchResultsContainer").empty();
});

$(document).on("mobileinit", function() {
    $("#oldSearchResultsContainer").empty();
});


$('#datePicker1').datepicker({}).on('changeDate', function(e) {
    $(this).datepicker('hide');
});

$('#datePicker2').datepicker({}).on('changeDate', function(e) {
    $(this).datepicker('hide');
});


function collapseNavbar() {
    if ($(".navbar").offset().top > 50) { $(".navbar-fixed-top").addClass("top-nav-collapse"); } else { $(".navbar-fixed-top").removeClass("top-nav-collapse"); }
}
$(window).scroll(collapseNavbar);
$(document).ready(function(){
$("#backSearch").on("click", function() {
    $("#card").flip('toggle');
    $("#eventAppend-slides").empty();
    // $("#hotels").hide();
});
originalSliderContainer = $("#eventAppend").clone();
// $("#hotels").hide();
collapseNavbar();
// Flip Setup
$("#card").flip({trigger:"manual"});

// Slider Setup
  jssor_1_SlideshowTransitions = [
              {$Duration:1200,$Zoom:1,$Easing:{$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$OutQuad},$Opacity:2},
              {$Duration:1000,$Zoom:11,$SlideOut:true,$Easing:{$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear},$Opacity:2},
              {$Duration:1200,$Zoom:1,$Rotate:1,$During:{$Zoom:[0.2,0.8],$Rotate:[0.2,0.8]},$Easing:{$Zoom:$Jease$.$Swing,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$Swing},$Opacity:2,$Round:{$Rotate:0.5}},
              {$Duration:1000,$Zoom:11,$Rotate:1,$SlideOut:true,$Easing:{$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$InExpo},$Opacity:2,$Round:{$Rotate:0.8}},
              {$Duration:1200,x:0.5,$Cols:2,$Zoom:1,$Assembly:2049,$ChessMode:{$Column:15},$Easing:{$Left:$Jease$.$InCubic,$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$Linear},$Opacity:2},
              {$Duration:1200,x:4,$Cols:2,$Zoom:11,$SlideOut:true,$Assembly:2049,$ChessMode:{$Column:15},$Easing:{$Left:$Jease$.$InExpo,$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear},$Opacity:2},
              {$Duration:1200,x:0.6,$Zoom:1,$Rotate:1,$During:{$Left:[0.2,0.8],$Zoom:[0.2,0.8],$Rotate:[0.2,0.8]},$Easing:{$Left:$Jease$.$Swing,$Zoom:$Jease$.$Swing,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$Swing},$Opacity:2,$Round:{$Rotate:0.5}},
              {$Duration:1000,x:-4,$Zoom:11,$Rotate:1,$SlideOut:true,$Easing:{$Left:$Jease$.$InExpo,$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$InExpo},$Opacity:2,$Round:{$Rotate:0.8}},
              {$Duration:1200,x:-0.6,$Zoom:1,$Rotate:1,$During:{$Left:[0.2,0.8],$Zoom:[0.2,0.8],$Rotate:[0.2,0.8]},$Easing:{$Left:$Jease$.$Swing,$Zoom:$Jease$.$Swing,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$Swing},$Opacity:2,$Round:{$Rotate:0.5}},
              {$Duration:1000,x:4,$Zoom:11,$Rotate:1,$SlideOut:true,$Easing:{$Left:$Jease$.$InExpo,$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$InExpo},$Opacity:2,$Round:{$Rotate:0.8}},
              {$Duration:1200,x:0.5,y:0.3,$Cols:2,$Zoom:1,$Rotate:1,$Assembly:2049,$ChessMode:{$Column:15},$Easing:{$Left:$Jease$.$InCubic,$Top:$Jease$.$InCubic,$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$OutQuad,$Rotate:$Jease$.$InCubic},$Opacity:2,$Round:{$Rotate:0.7}},
              {$Duration:1000,x:0.5,y:0.3,$Cols:2,$Zoom:1,$Rotate:1,$SlideOut:true,$Assembly:2049,$ChessMode:{$Column:15},$Easing:{$Left:$Jease$.$InExpo,$Top:$Jease$.$InExpo,$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$InExpo},$Opacity:2,$Round:{$Rotate:0.7}},
              {$Duration:1200,x:-4,y:2,$Rows:2,$Zoom:11,$Rotate:1,$Assembly:2049,$ChessMode:{$Row:28},$Easing:{$Left:$Jease$.$InCubic,$Top:$Jease$.$InCubic,$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$OutQuad,$Rotate:$Jease$.$InCubic},$Opacity:2,$Round:{$Rotate:0.7}},
              {$Duration:1200,x:1,y:2,$Cols:2,$Zoom:11,$Rotate:1,$Assembly:2049,$ChessMode:{$Column:19},$Easing:{$Left:$Jease$.$InCubic,$Top:$Jease$.$InCubic,$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$OutQuad,$Rotate:$Jease$.$InCubic},$Opacity:2,$Round:{$Rotate:0.8}}
            ];

            jssor_1_options = {
              $AutoPlay: 0,
              $SlideshowOptions: {
                $Class: $JssorSlideshowRunner$,
                $Transitions: jssor_1_SlideshowTransitions,
                $TransitionsOrder: 1
              },
              $ArrowNavigatorOptions: {
                $Class: $JssorArrowNavigator$
              },
                $ThumbnailNavigatorOptions: {
                $Class: $JssorThumbnailNavigator$,
                $Rows: 2,
                $Cols: 6,
                $SpacingX: 14,
                $SpacingY: 12,
                $Orientation: 2,
                $Align: 156
              }
            };

            

            /*responsive code begin*/
            /*remove responsive code if you don't want the slider scales while window resizing*/
            // ScaleSlider();
            // $(window).bind("load", ScaleSlider);
            $(window).bind("resize", ScaleSlider);
            $(window).bind("orientationchange", ScaleSlider);
});
$(function() {
    $('a.page-scroll').bind('click', function(event) {
        var $anchor = $(this);
        $('html, body').stop().animate({ scrollTop: $($anchor.attr('href')).offset().top }, 1500, 'easeInOutExpo');
        event.preventDefault();
    });
});
$('.navbar-collapse ul li a').click(function() { $(".navbar-collapse").collapse('hide'); });


var map;
var infowindow;
var request;
var service;
var markers = [];


function initialize(lat, lng) {
    var center = new google.maps.LatLng(lat, lng);

    map = new google.maps.Map(document.getElementById('map'), {
        center: center,
        zoom: 12
    });

    var request = {
        location: center,
        radius: 16047,
        type: ['lodging']

    };

    infowindow = new google.maps.InfoWindow();
    var service = new google.maps.places.PlacesService(map);
    service.nearbySearch(request, callback);
}

function callback(returns, status) {
    if (status == google.maps.places.PlacesServiceStatus.OK) {
        for (var i = 0; i < returns.length; i++) {
            createMarker(returns[i]);
        }
    }
}

function createMarker(place) {


    var placeLoc = place.geometry.location;
    var service = new google.maps.places.PlacesService(map);


    service.getDetails({
        placeId: place.place_id
    }, function(place, status) {

        var marker = new google.maps.Marker({
            map: map,
            position: place.geometry.location,
            title: "Click here for more details"
        });

        google.maps.event.addListener(marker, 'click', function() {
            infowindow.setContent("<div><strong>" + place.name + "</strong><br> Address: " +
                place.formatted_address + "<br> Phone: " + place.formatted_phone_number +
                "<br> Rating: " + place.rating + "<br><div><a href='" + place.url + "' target='_blank'>Check Availability</div></div>");
            infowindow.open(map, this);
            console.log(place);
        });

    });


}

google.maps.event.addDomListener(window, 'load', initialize(30.2672654, -97.768282));



// ticketmaster API + Gmaps API boilerplate
$("#userInputBtn").on("click", function() {
    event.preventDefault();

    var zip = $("#zipInput").val().trim();
    var city = $("#exampleCity").val().trim();
    var state = $("#exampleState").val().trim();
    var email = $("#exampleInputEmail1").val().trim();
    var address = city + state + zip;
    //formatting date for TM API
    var startDate = moment($("#exampleStartDate").val().trim(), "MM-DD-YYYY").format("YYYY-MM-DD");
    var endDate = moment($("#exampleEndDate").val().trim(), "MM-DD-YYYY").format("YYYY-MM-DD");

    database.ref().push({

        city: city,
        state: state,
        zip: zip,
        start_date: startDate,
        end_date: endDate,
        email: email,

    });

    var queryURL = "https://app.ticketmaster.com/discovery/v2/events.json?countryCode=US&city=" + city + "&startDateTime=" + startDate + "T14:00:00Z" + "&endDateTime=" + endDate + "T14:00:00Z" + "&apikey=Y7d6IhdzuKbg2Vw9Vij5Sb1q8q7kP63r";

    $.ajax({
        type: "GET",
        url: queryURL,
        async: true,
        dataType: "json",
        success: function(response) {
            console.log(response);
            // Parse the response.
            var results = response._embedded;

            if (response.page.totalElements > 0) {
                    // Display the event info on the page
                $("#eventAppend").remove();
                $("#eventappend-container").append(originalSliderContainer.clone());
                for (var i = 0; i < Math.min(20, response.page.totalElements); i++) {

                    var eventContainer = $("<div>");
                    var eventDiv = $("<div data-u='image'>");
                    var textDiv = $("<div class='eventText'>");
                    var thumbnail = $("<img data-u='thumb'>");
                    var eventDescriptions = $("<p>");
                    if (results.events[i].classifications && results.events[i].classifications[0] && results.events[i].classifications[0].genre) {
                        eventDescriptions = $("<p>").text("Type of event: " + results.events[i].classifications[0].genre.name);
                    } 
                    else {
                        eventDescriptions = $("<p>").text('Click the "Buy Tickets" button for updated information.');
                    }
                    var eventName = $("<p>").text(results.events[i].name);
                    var eventDate = $("<p>").text("Date: " + moment(results.events[i].dates.start.localDate, "YYYY-MM-DD").format("MM/DD/YYYY"));
                    var eventStartTime = $("<p>").text("Start Time: " + moment(results.events[i].dates.start.localTime, "hh:mma").format("hh:mma"));
                    var eventImage = $("<img>");
                    var eventTicket = $("<a>");
                    var eventPrice = $("<p>");
                    if (results.events[i].priceRanges && results.events[i].priceRanges[0]) {
                        var eventPrice = $("<p>").text("Tickets starting at $" + results.events[i].priceRanges[0].min);
                    } else {
                        var eventPrice = $("<p>").text('Click the "Buy Tickets" button for updated pricing.');
                    }
                    if(results.events[i].images && results.events[i].images[0]){
                        eventDiv.css('background-image', 'url('+results.events[i].images[0].url + ')').css("background-size", "cover");
                        thumbnail.attr("src", results.events[i].images[0].url);
                        if (results.events[i].images[0].fallback === true) {
                            eventDiv.css('background-image', 'url('+results.events[i].images[0].url + ')').css("background-size", "cover");
                            thumbnail.attr("src", results.events[i].images[0].url);
                    }
                    }
                    eventImage.addClass("resultsImage");
                    eventDescriptions.addClass("resultsDescription");
                    eventName.addClass("resultsName");
                    eventDate.addClass("resultsDate");
                    eventStartTime.addClass("resultsStartTime");
                    eventTicket.addClass("resultsTicket");
                    eventPrice.addClass("resultsPrice");
                    eventTicket.attr("href", results.events[i].url);
                    eventTicket.attr("target", "_blank");
                    eventTicket.text("Buy Tickets");
                    textDiv.append(eventName);
                    textDiv.append(eventDescriptions);
                    textDiv.append(eventDate);
                    textDiv.append(eventStartTime);
                    textDiv.append(eventPrice);
                    textDiv.append(eventTicket);
                    eventDiv.addClass("eventEntry");
                    eventDiv.append(textDiv);
                    eventContainer.append(eventDiv).append(thumbnail);
                    $("#eventAppend-slides").append(eventContainer);

                }
                jssor_1_slider = new $JssorSlider$("eventAppend",jssor_1_options);
                $("#card").flip('toggle');
            }
             else {
                var errorMessage = $("<h2>").text("We cannot find any events in your area, please try again.");
                $("#eventAppend").append(errorMessage);
            }
        },

        error: function(xhr, status, err) {
            // This time, we do not end up here!

        }

    });
    //clear events results after user clicks submit again.
    $("#eventAppend").empty();


    // Gmaps JS API Geocoding for new address searches
    var geocoder = new google.maps.Geocoder();
    geocodeAddress(geocoder, map);
    var map;
    var infowindow;
    var request;
    var service;
    var markers = [];



    function geocodeAddress(geocoder, resultsMap) {
        geocoder.geocode({ 'address': address }, function(results, status) {
            if (status === 'OK') {
                console.log(results);
                initialize(results[0].geometry.viewport.f.b, results[0].geometry.viewport.b.b);
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }
});


// create new buttons based on search history + firebase data
database.ref().on("child_added", function(childSnapshot) {

    var oldCity = childSnapshot.val().city;
    var oldState = childSnapshot.val().state;
    var oldZip = childSnapshot.val().zip;
    var oldStartDate = moment(childSnapshot.val().start_date, "YYYY-MM-DD").format("MM/DD/YYYY");
    var oldEndDate = moment(childSnapshot.val().end_date, "YYYY-MM-DD").format("MM/DD/YYYY");


    var searchedButton = $("<button>");
    searchedButton.text(oldCity + ", " + oldState + " " + oldZip + " " + oldStartDate + "-" + oldEndDate);
    searchedButton.attr("data-city", oldCity);
    searchedButton.attr("data-state", oldState);
    searchedButton.attr("data-zip", oldZip);
    searchedButton.attr("data-startDate", oldStartDate);
    searchedButton.attr("data-endDate", oldEndDate);
    searchedButton.addClass("searchedButton btn btn-default");
    $("#oldSearchResultsContainer").append(searchedButton);


    // run api calls if a button is clicked
    $(".searchedButton").on("click", function() {
        $("#eventAppend").empty();

        var zip = $(this).attr("data-zip");
        var city = $(this).attr("data-city");
        var state = $(this).attr("data-state");
        var address = city + state + zip;
        var startDate = moment($(this).attr("data-startDate"), "MM/DD/YYYY").format("YYYY-MM-DD");
        var endDate = moment($(this).attr("data-endDate"), "MM/DD/YYYY").format("YYYY-MM-DD");
        var queryURL = "https://app.ticketmaster.com/discovery/v2/events.json?countryCode=US&city=" + city + "&startDateTime=" + startDate + "T14:00:00Z" + "&endDateTime=" + endDate + "T14:00:00Z" + "&apikey=Y7d6IhdzuKbg2Vw9Vij5Sb1q8q7kP63r";


        $.ajax({
            type: "GET",
            url: queryURL,
            async: true,
            dataType: "json",
            success: function(response) {
                // Parse the response.
                var results = response._embedded;

                if (response.page.totalElements > 0) {
                    // Display the event info on the page
                    $("#eventAppend").remove();
                    $("#eventappend-container").append(originalSliderContainer.clone());
                    for (var i = 0; i < Math.min(20, response.page.totalElements); i++) {

                        var eventContainer = $("<div>");
                        var eventDiv = $("<div data-u='image'>");
                        var textDiv = $("<div class='eventText'>");
                        var thumbnail = $("<img data-u='thumb'>");
                        var eventDescriptions = $("<p>");
                        if (results.events[i].classifications && results.events[i].classifications[0] && results.events[i].classifications[0].genre) {
                            eventDescriptions = $("<p>").text("Type of event: " + results.events[i].classifications[0].genre.name);
                        } 
                        else {
                            eventDescriptions = $("<p>").text('Click the "Buy Tickets" button for updated information.');
                        }
                        var eventName = $("<p>").text(results.events[i].name);
                        var eventDate = $("<p>").text("Date: " + moment(results.events[i].dates.start.localDate, "YYYY-MM-DD").format("MM/DD/YYYY"));
                        var eventStartTime = $("<p>").text("Start Time: " + moment(results.events[i].dates.start.localTime, "hh:mma").format("hh:mma"));
                        var eventImage = $("<img>");
                        var eventTicket = $("<a>");
                        var eventPrice = $("<p>");
                        if (results.events[i].priceRanges && results.events[i].priceRanges[0]) {
                            var eventPrice = $("<p>").text("Tickets starting at $" + results.events[i].priceRanges[0].min);
                        } else {
                            var eventPrice = $("<p>").text('Click the "Buy Tickets" button for updated pricing.');
                        }
                        if(results.events[i].images && results.events[i].images[0]){
                            eventDiv.css('background-image', 'url('+results.events[i].images[0].url + ')').css("background-size", "cover");
                            thumbnail.attr("src", results.events[i].images[0].url);
                        }
                        eventImage.addClass("resultsImage");
                        eventDescriptions.addClass("resultsDescription");
                        eventName.addClass("resultsName");
                        eventDate.addClass("resultsDate");
                        eventStartTime.addClass("resultsStartTime");
                        eventTicket.addClass("resultsTicket");
                        eventPrice.addClass("resultsPrice");
                        eventTicket.attr("href", results.events[i].url);
                        eventTicket.attr("target", "_blank");
                        eventTicket.text("Buy Tickets");
                        textDiv.append(eventName);
                        textDiv.append(eventDescriptions);
                        textDiv.append(eventDate);
                        textDiv.append(eventStartTime);
                        textDiv.append(eventPrice);
                        textDiv.append(eventTicket);
                        eventDiv.addClass("eventEntry");
                        eventDiv.append(textDiv);
                        eventContainer.append(eventDiv).append(thumbnail);
                        $("#eventAppend-slides").append(eventContainer);

                    }
                    jssor_1_slider = new $JssorSlider$("eventAppend",jssor_1_options);
                    $("#card").flip('false');
                } else {
                    var errorMessage = $("<h2>").text("We cannot find any events in your area, please try again.");
                    $("#eventAppend").append(errorMessage);
                }
            },

            error: function(xhr, status, err) {
                // This time, we do not end up here!

            }

                });

        // Gmaps JS API Geocoding for new address searches
        var geocoder = new google.maps.Geocoder();
        geocodeAddress(geocoder, map);
        var map;
        var infowindow;
        var request;
        var service;
        var markers = [];



        function geocodeAddress(geocoder, resultsMap) {
            geocoder.geocode({ 'address': address }, function(results, status) {
                if (status === 'OK') {
                    initialize(results[0].geometry.viewport.f.b, results[0].geometry.viewport.b.b);
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }

    });


}, function(errorObject) {
    console.log("Errors handled: " + errorObject.code);
});
//push into git repo