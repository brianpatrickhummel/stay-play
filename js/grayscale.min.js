/*!
 * Start Bootstrap - Grayscale v3.3.7+1 (http://startbootstrap.com/template-overviews/grayscale)
 * Copyright 2013-2016 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap/blob/gh-pages/LICENSE)
 */

var jssor_1_SlideshowTransitions = [
              
              ];

            var jssor_1_options = {
              
            };

            var jssor_1_slider = {};


function ScaleSlider() {
    var refSize = jssor_1_slider.$Elmt.parentNode.clientWidth;
    if (refSize) {
        refSize = Math.min(refSize, 960);
        refSize = Math.max(refSize, 300);
        jssor_1_slider.$ScaleWidth(refSize);
    }
    else {
        window.setTimeout(ScaleSlider, 30);
    }
}

function collapseNavbar() {
    if ($(".navbar").offset().top > 50) { $(".navbar-fixed-top").addClass("top-nav-collapse"); } else { $(".navbar-fixed-top").removeClass("top-nav-collapse"); }
}
$(window).scroll(collapseNavbar);
$(document).ready(function(){
collapseNavbar();
// Flip Setup
$("#card").flip({trigger:"manual"});

// Slider Setup
  jssor_1_SlideshowTransitions = [
              {$Duration:1200,$Zoom:1,$Easing:{$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$OutQuad},$Opacity:2},
              {$Duration:1000,$Zoom:11,$SlideOut:true,$Easing:{$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear},$Opacity:2},
              {$Duration:1200,$Zoom:1,$Rotate:1,$During:{$Zoom:[0.2,0.8],$Rotate:[0.2,0.8]},$Easing:{$Zoom:$Jease$.$Swing,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$Swing},$Opacity:2,$Round:{$Rotate:0.5}},
              {$Duration:1000,$Zoom:11,$Rotate:1,$SlideOut:true,$Easing:{$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$InExpo},$Opacity:2,$Round:{$Rotate:0.8}},
              {$Duration:1200,x:0.5,$Cols:2,$Zoom:1,$Assembly:2049,$ChessMode:{$Column:15},$Easing:{$Left:$Jease$.$InCubic,$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$Linear},$Opacity:2},
              {$Duration:1200,x:4,$Cols:2,$Zoom:11,$SlideOut:true,$Assembly:2049,$ChessMode:{$Column:15},$Easing:{$Left:$Jease$.$InExpo,$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear},$Opacity:2},
              {$Duration:1200,x:0.6,$Zoom:1,$Rotate:1,$During:{$Left:[0.2,0.8],$Zoom:[0.2,0.8],$Rotate:[0.2,0.8]},$Easing:{$Left:$Jease$.$Swing,$Zoom:$Jease$.$Swing,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$Swing},$Opacity:2,$Round:{$Rotate:0.5}},
              {$Duration:1000,x:-4,$Zoom:11,$Rotate:1,$SlideOut:true,$Easing:{$Left:$Jease$.$InExpo,$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$InExpo},$Opacity:2,$Round:{$Rotate:0.8}},
              {$Duration:1200,x:-0.6,$Zoom:1,$Rotate:1,$During:{$Left:[0.2,0.8],$Zoom:[0.2,0.8],$Rotate:[0.2,0.8]},$Easing:{$Left:$Jease$.$Swing,$Zoom:$Jease$.$Swing,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$Swing},$Opacity:2,$Round:{$Rotate:0.5}},
              {$Duration:1000,x:4,$Zoom:11,$Rotate:1,$SlideOut:true,$Easing:{$Left:$Jease$.$InExpo,$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$InExpo},$Opacity:2,$Round:{$Rotate:0.8}},
              {$Duration:1200,x:0.5,y:0.3,$Cols:2,$Zoom:1,$Rotate:1,$Assembly:2049,$ChessMode:{$Column:15},$Easing:{$Left:$Jease$.$InCubic,$Top:$Jease$.$InCubic,$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$OutQuad,$Rotate:$Jease$.$InCubic},$Opacity:2,$Round:{$Rotate:0.7}},
              {$Duration:1000,x:0.5,y:0.3,$Cols:2,$Zoom:1,$Rotate:1,$SlideOut:true,$Assembly:2049,$ChessMode:{$Column:15},$Easing:{$Left:$Jease$.$InExpo,$Top:$Jease$.$InExpo,$Zoom:$Jease$.$InExpo,$Opacity:$Jease$.$Linear,$Rotate:$Jease$.$InExpo},$Opacity:2,$Round:{$Rotate:0.7}},
              {$Duration:1200,x:-4,y:2,$Rows:2,$Zoom:11,$Rotate:1,$Assembly:2049,$ChessMode:{$Row:28},$Easing:{$Left:$Jease$.$InCubic,$Top:$Jease$.$InCubic,$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$OutQuad,$Rotate:$Jease$.$InCubic},$Opacity:2,$Round:{$Rotate:0.7}},
              {$Duration:1200,x:1,y:2,$Cols:2,$Zoom:11,$Rotate:1,$Assembly:2049,$ChessMode:{$Column:19},$Easing:{$Left:$Jease$.$InCubic,$Top:$Jease$.$InCubic,$Zoom:$Jease$.$InCubic,$Opacity:$Jease$.$OutQuad,$Rotate:$Jease$.$InCubic},$Opacity:2,$Round:{$Rotate:0.8}}
            ];

            jssor_1_options = {
              $AutoPlay: 0,
              $SlideshowOptions: {
                $Class: $JssorSlideshowRunner$,
                $Transitions: jssor_1_SlideshowTransitions,
                $TransitionsOrder: 1
              },
              $ArrowNavigatorOptions: {
                $Class: $JssorArrowNavigator$
              },
              $ThumbnailNavigatorOptions: {
                $Class: $JssorThumbnailNavigator$,
                $Rows: 2,
                $Cols: 6,
                $SpacingX: 14,
                $SpacingY: 12,
                $Orientation: 2,
                $Align: 156
              }
            };

            

            /*responsive code begin*/
            /*remove responsive code if you don't want the slider scales while window resizing*/
            // ScaleSlider();
            // $(window).bind("load", ScaleSlider);
            $(window).bind("resize", ScaleSlider);
            $(window).bind("orientationchange", ScaleSlider);
});
$(function() {
    $('a.page-scroll').bind('click', function(event) {
        var $anchor = $(this);
        $('html, body').stop().animate({ scrollTop: $($anchor.attr('href')).offset().top }, 1500, 'easeInOutExpo');
        event.preventDefault();
    });
});
$('.navbar-collapse ul li a').click(function() { $(".navbar-collapse").collapse('hide'); });
var map = null;
google.maps.event.addDomListener(window, 'load', init);
google.maps.event.addDomListener(window, 'resize', function() { map.setCenter(new google.maps.LatLng(40.6700, -73.9400)); });

function init() {
    var mapOptions = { zoom: 15, center: new google.maps.LatLng(40.6700, -73.9400), disableDefaultUI: true, scrollwheel: false, draggable: false, styles: [{ "featureType": "water", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }, { "featureType": "landscape", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "road.highway", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 17 }] }, { "featureType": "road.highway", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 29 }, { "weight": 0.2 }] }, { "featureType": "road.arterial", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 18 }] }, { "featureType": "road.local", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 16 }] }, { "featureType": "poi", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 21 }] }, { "elementType": "labels.text.stroke", "stylers": [{ "visibility": "on" }, { "color": "#000000" }, { "lightness": 16 }] }, { "elementType": "labels.text.fill", "stylers": [{ "saturation": 36 }, { "color": "#000000" }, { "lightness": 40 }] }, { "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "transit", "elementType": "geometry", "stylers": [{ "color": "#000000" }, { "lightness": 19 }] }, { "featureType": "administrative", "elementType": "geometry.fill", "stylers": [{ "color": "#000000" }, { "lightness": 20 }] }, { "featureType": "administrative", "elementType": "geometry.stroke", "stylers": [{ "color": "#000000" }, { "lightness": 17 }, { "weight": 1.2 }] }] };
    var mapElement = document.getElementById('map');
    map = new google.maps.Map(mapElement, mapOptions);
    var image = 'img/map-marker.png';
    var myLatLng = new google.maps.LatLng(40.6700, -73.9400);
    var beachMarker = new google.maps.Marker({ position: myLatLng, map: map, icon: image });
}



$("#backSearch").on("click", function() {
$("#card").flip('toggle');
$("#eventAppend-slides").empty();
});

// ticketmaster API boilerplate
$("#userInputBtn").on("click", function() {
    event.preventDefault();
   
    // var zip = $("#zipInput").val().trim();
    var city = $("#exampleCity").val().trim();
    //formatting date for TM API
    var startDate = moment($("#exampleStartDate").val().trim(), "MM-DD-YYYY").format("YYYY-MM-DD");
    // moment(startDate, "YYYY-MM-DD").format("YYYY-MM-DD");
    console.log(startDate);

    // var endDate = $("#contact").val().trim();
    var queryURL = "https://app.ticketmaster.com/discovery/v2/events.json?countryCode=US&city=" + city + "&startDateTime=" + startDate + "T14:00:00Z" +  "&apikey=Y7d6IhdzuKbg2Vw9Vij5Sb1q8q7kP63r";



    $.ajax({
        type: "GET",
        url: queryURL,
        async: true,
        dataType: "json",
        success: function(response) {
            console.log(response);
            // Parse the response.
            var results = response._embedded;

            console.log(results);
            console.log(queryURL);


            for (var i = 0; i < 10; i++) {
                var container = $("<div>");
                var eventDiv = $('<div data-u="image">');
                var thumbnail = $('<div data-u="thumb">');
                var eventDescriptions = $("<p>").text("Description: " + results.events[i].classifications[0].genre.name);
                var eventName = $("<p>").text("Name: " + results.events[i].name);
                var thumbName = $("<p>").text("Name: " + results.events[i].name);
                var eventStartTime = $("<p>").text("Start Time: " + moment(results.events[i].dates.start.localTime, "hh:mma").format("hh:mma"));
                var eventImage = $("<img>");
                var thumbImage = $("<img>");
                eventImage.addClass("resultsImage");
                // thumbImage.addClass("thumb");
                eventDescriptions.addClass("resultsDescription");
                eventName.addClass("resultsName");
                thumbName.addClass("thumbName");
                eventStartTime.addClass("resultsStartTime");
                eventImage.attr("src", results.events[i].images[i].url);
                thumbImage.attr("src", results.events[i].images[i].url);
                eventDiv.append(eventName);
                eventDiv.append(eventDescriptions);
                eventDiv.append(eventStartTime);
                eventDiv.append(eventImage);
                eventDiv.addClass("eventEntry");
                thumbnail.append(thumbName);
                // thumbnail.append(thumbImage);
                container.append(eventDiv);
                container.append(thumbImage.attr('data-u', 'thumb'));
                $("#eventAppend-slides").append(container);

                // Do other things.
            }
             setTimeout(function () {
                jssor_1_slider = new $JssorSlider$("eventAppend", jssor_1_options);
             ScaleSlider();
            }, 500);
             $("#card").flip('toggle');
        },
        error: function(xhr, status, err) {
            // This time, we do not end up here!

        }
    });



});

//Firebase Database -- needed to incorporate google hotel api & save recent city searches 
var config = {
    apiKey: "AIzaSyClTOHIFhCAp2VtAga6fgZgs_Tdn0X7ue4",
    authDomain: "staynplay-db2.firebaseapp.com",
    databaseURL: "https://staynplay-db2.firebaseio.com",
    projectId: "staynplay-db2",
    storageBucket: "staynplay-db2.appspot.com",
    messagingSenderId: "61188880759"
};
firebase.initializeApp(config);
